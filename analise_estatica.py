import requests
import json
import pefile
import os
import hashlib
import csv
import mariadb
import hashlib
import sys
import subprocess
import re


#headers = { 'API-KEY':'922819c42dfd6bd93c5903e25f69644f'}

#data = {'query' : 'get_recent', 'selector': '10000'}

#response= requests.post('https://mb-api.abuse.ch/api/v1/', data=data,timeout=15, headers=headers)


#print(response.content.decode("utf-8","ignore"))


#path="D:\legitimos\teste\DismHost.exe"

#try:
#    conn = mariadb.connect(
#        user="seusuario",
#        password="suasenha",
#        host="localhost",
#        port=3306,
#        database="analise_malware"

#    )
#except mariadb.Error as e:
#    print(f"Error connecting to MariaDB Platform: {e}")
#    sys.exit(1)

# Get Cursor
#cur = conn.cursor()


dict = dict()

def getInfoMalware(malware_hash):
	headers = { 'API-KEY':'seutoken'}
	data = {'query':'get_info', 'hash':malware_hash}
	response= requests.post('https://mb-api.abuse.ch/api/v1/', data=data,timeout=15, headers=headers)
	response = response.json()
	return response['data']
	
	
#retorno = getInfoMalware()

#print(retorno)

def removeFile(path):
	dict = {}
	try:
		pe = pefile.PE(path)
		#print(path)
	except pefile.PEFormatError as e:
		os.remove(path)
		dict["error"] = True
		return dict

		
		

def getPeHeader(path,tipo):
	
	dict = {}
	try:
		pe = pefile.PE(path)
	except pefile.PEFormatError as e:
		dict["error"] = True
		return dict
		
	openfile = open(path,'rb')
	readFile = openfile.read()
	sha256hash = hashlib.sha256(readFile)
	sha256hashed = sha256hash.hexdigest()

	for keys in pe.DOS_HEADER.__keys__:
		for field in keys:
			value = eval(f'pe.DOS_HEADER.{field}')
			field = "DOS_HEADER_"+field
			value = str(value)
			value = value.replace("b'","").replace("'","")
			query_insert_column = "ALTER TABLE analises_pe ADD COLUMN IF NOT EXISTS "+field+" TEXT"
			cur.execute(query_insert_column)
			query_insert_value= "UPDATE analises_pe SET "+field+" = '"+value+"' WHERE sha256 = '"+sha256hashed+"'"
			#print(query_insert_value)
			cur.execute(query_insert_value)
			dict[field] = value

	for keys in pe.NT_HEADERS.__keys__:
		for field in keys:
			value = eval(f'pe.NT_HEADERS.{field}')
			field = "NT_HEADERS_"+field
			value = str(value)
			value = value.replace("b'","").replace("'","")
			query_insert_column = "ALTER TABLE analises_pe ADD COLUMN IF NOT EXISTS "+field+" TEXT"
			cur.execute(query_insert_column)
			query_insert_value= "UPDATE analises_pe SET "+field+" = '"+value+"' WHERE sha256 = '"+sha256hashed+"'"
			cur.execute(query_insert_value)
			dict[field] = value
			
	for keys in pe.FILE_HEADER.__keys__:
		for field in keys:
			value = eval(f'pe.FILE_HEADER.{field}')
			field = "FILE_HEADER_"+field
			value = str(value)
			value = value.replace("b'","").replace("'","")
			query_insert_column = "ALTER TABLE analises_pe ADD COLUMN IF NOT EXISTS "+field+" TEXT"
			cur.execute(query_insert_column)
			query_insert_value= "UPDATE analises_pe SET "+field+" = '"+value+"' WHERE sha256 = '"+sha256hashed+"'"
			cur.execute(query_insert_value)
			dict[field] = value
			
	for keys in pe.OPTIONAL_HEADER.__keys__:
		for field in keys:
			value = eval(f'pe.OPTIONAL_HEADER.{field}')
			field = "OPTIONAL_HEADER_"+field
			value = str(value)
			value = value.replace("b'","").replace("'","")
			query_insert_column = "ALTER TABLE analises_pe ADD COLUMN IF NOT EXISTS "+field+" TEXT"
			cur.execute(query_insert_column)
			query_insert_value= "UPDATE analises_pe SET "+field+" = '"+value+"' WHERE sha256 = '"+sha256hashed+"'"
			cur.execute(query_insert_value)
			dict[field] = value
			
	if "DIRECTORY_ENTRY_IMPORT" in dir(pe):
		for entry in pe.DIRECTORY_ENTRY_IMPORT:
			tam = len(entry.imports)
			val = str(entry.dll)
			val = val.replace("b'","").replace("'","")
			query_insert_column = "ALTER TABLE analises_pe ADD COLUMN IF NOT EXISTS `"+val+"`INT"
			cur.execute(query_insert_column)
			query_insert_value= "UPDATE analises_pe SET `"+val+"` = "+str(tam)+" WHERE sha256 = '"+sha256hashed+"'"
			cur.execute(query_insert_value)
			#for imp in entry.imports:
			#	val = "DIR"+str(entry.dll)+"."+str(imp.name)
			#	val = val.replace("b'","").replace("'","").replace("-","").replace("_","").replace("runtime","RTM")
			#	query_insert_column = "ALTER TABLE analises_pe ADD COLUMN IF NOT EXISTS `"+val+"`INT"
			#	cur.execute(query_insert_column)
			#	query_insert_value= "UPDATE analises_pe SET `"+val+"` = 1 WHERE sha256 = '"+sha256hashed+"'"
			#	cur.execute(query_insert_value)
			#	dict[val] = 1
	else:
		print("NODLL")

	
	return dict

			
#teste = getPeHeader(path,"legitimo")
#print(teste)


def checkKey(dict, key):    
	if key in dict.keys(): 
		return True
		#print("Key is here, ", end =" ") 
		#print("value =", dict[key])
	else:
		#print("Key isn't present.")
		return False	



def getStrings(path,tipo):
	#output = subprocess.getoutput("strings -u D:\\legitimos\\teste3\\_isdel.exe")
	output = subprocess.getoutput("strings "+path+"")
	output = output.split("\n")
	openfile = open(path,'rb')
	readFile = openfile.read()
	sha256hash = hashlib.sha256(readFile)
	sha256hashed = sha256hash.hexdigest()
	
	dict['sha256'] = sha256hashed
	dict['tipo'] = tipo
	dict['0to5'] = 0
	dict['6to10'] = 0
	dict['11to15'] = 0
	dict['16to20'] = 0
	dict['21to25'] = 0
	dict['26to30'] = 0
	dict['31to35'] = 0
	dict['36to40'] = 0
	dict['41to45'] = 0
	dict['46to50'] = 0
	dict['51to55'] = 0
	dict['56to60'] = 0
	dict['61to'] = 0
	dict['qt_domain'] = 0	
	dict['qt_ip_address'] = 0
	
	while("" in output):
		output.remove("")
	
	
	 
	for x in output:
		matches = re.findall(r'\s(?:www.)(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]', x)
		matches_ip = re.findall(r"^([1]{1}[0-9]{1,2}|[2]{1}[1-5]{2}|[0-9]{1,2})\.([1]{1}[0-9]{1,2}|[2]{1}[1-5]{2}|[0-9]{1,2})\.([1]{1}[0-9]{1,2}|[2]{1}[1-5]{2}|[0-9]{1,2})\.([1]{1}[0-9]{1,2}|[2]{1}[1-5]{2}|[0-9]{1,2})",x)
		tamanho_string = len(x)
		#print(len(matches))
		#print(len(matches_ip))
		#print(tamanho_string)
		
		dict['qt_domain'] = dict['qt_domain'] + len(matches)
		dict['qt_ip_address'] = dict['qt_ip_address'] + len(matches_ip)
		
		
		if tamanho_string <= 5:
			dict['0to5'] = dict['0to5'] + 1
		elif ((tamanho_string >= 6) and (tamanho_string <=10)):
			dict['6to10'] = dict['6to10'] + 1
		elif ((tamanho_string >= 11) and (tamanho_string <=15)):
			dict['11to15'] = dict['11to15'] + 1
		elif ((tamanho_string >= 16) and (tamanho_string <=20)):
			dict['16to20'] = dict['16to20'] + 1
		elif ((tamanho_string >= 21) and (tamanho_string <=25)):
			dict['21to25'] = dict['21to25'] + 1
		elif ((tamanho_string >= 26) and (tamanho_string <=30)):
			dict['26to30'] = dict['26to30'] + 1
		elif ((tamanho_string >= 31) and (tamanho_string <=35)):
			dict['31to35'] = dict['31to35'] + 1
		elif ((tamanho_string >= 36) and (tamanho_string <=40)):
			dict['36to40'] = dict['36to40'] + 1
		elif ((tamanho_string >= 41) and (tamanho_string <=45)):
			dict['41to45'] = dict['41to45'] + 1
		elif ((tamanho_string >= 46) and (tamanho_string <=50)):
			dict['46to50'] = dict['46to50'] + 1
		elif ((tamanho_string >= 51) and (tamanho_string <=55)):
			dict['51to55'] = dict['51to55'] + 1	
		elif ((tamanho_string >= 56) and (tamanho_string <=60)):
			dict['56to60'] = dict['56to60'] + 1
		elif (tamanho_string >= 61):
			dict['61to'] = dict['61to'] + 1
	
	query_insert_value= "INSERT INTO analises_strings (sha256) VALUES ('"+dict['sha256']+"')"
	cur.execute(query_insert_value)
	
	for key in dict:
			query_insert_column = 'ALTER TABLE analises_string ADD COLUMN IF NOT EXISTS `'+str(key)+'` TEXT'
			print(query_insert_column)
			cur.execute(query_insert_column)
			query_insert_value= "UPDATE analises_string SET `"+key+"` = '"+str(dict[key])+"' WHERE sha256 = '"+str(sha256hashed)+"'"
			cur.execute(query_insert_value)
			
	print(dict)
	
	


	



	
##openfile = open("/home/ubuntu/arquivos/malwares/allmalwares/54deea77c66f31b5b2ae101d942ddc0acd04a146f1dadf85f80034e1f6edd567.exe",'rb')
##readFile = openfile.read()
##sha256hash = hashlib.sha256(readFile)
##sha256hashed = sha256hash.hexdigest()
##sha256hashed
##getStrings(path)



#file = "D:\\legitimos\\teste3\\_isdel.exe"

#getStrings(file,"malware")


#list = []	
#for file in os.listdir("/home/ubuntu/arquivos/malwares/allmalwares"):
#	if file.endswith(".exe"):
#		arquivo = os.path.join("/home/ubuntu/arquivos/malwares/allmalwares", file)
#		retorno = getStrings(arquivo,"malware")
		#print(returno)#list.append(returno)


#for file in os.listdir("/home/ubuntu/arquivos/softwares"):
#	if file.endswith(".exe"):
#		arquivo = os.path.join("/home/ubuntu/arquivos/softwares/", file)
#		retorno = validaSha256(arquivo)
		
for file in os.listdir("/home/ubuntu/logs_dinamica"):
	if file.endswith(".json"):
		arquivo = os.path.join("/home/ubuntu/logs_dinamica/", file)
		retorno = validaSha256(arquivo,file)


		
#count = 0
#for file in os.listdir("/home/ubuntu/arquivos/softwares"):
#	count = count+1
#	if file.endswith(".exe"):
		
#		print("carregando: ",file,count)
#		arquivo = os.path.join("/home/ubuntu/arquivos/softwares", file)
#		returno = getPeHeader(arquivo,"legitimo")
		#print(returno)#list.append(returno)
		
#for file in os.listdir("/home/ubuntu/arquivos/softwares"):
#	if file.endswith(".exe"):
#		print("carregando: ",file)
#		arquivo = os.path.join("/home/ubuntu/arquivos/softwares", file)
#		retorno = removeFile(arquivo)

#with open('dataset.csv', 'w') as f:  
#    w = csv.DictWriter(f, my_dict.keys())
#    w.writeheader()
#   w.writerow(my_dict)
